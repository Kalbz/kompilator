"extends"               { return yy::parser::make_EXTENDS(yytext); }
"public"                { return yy::parser::make_PUBLIC(yytext); }
"static"                { return yy::parser::make_STATIC(yytext); }
"void"                  { return yy::parser::make_VOID(yytext); }
"int"                   { return yy::parser::make_INT_KEYWORD(yytext); }
"boolean"               { return yy::parser::make_BOOLEAN(yytext); }
"if"                    { return yy::parser::make_IF(yytext); }
"else"                  { return yy::parser::make_ELSE(yytext); }
"while"                 { return yy::parser::make_WHILE(yytext); }
"return"                { return yy::parser::make_RETURN(yytext); }
"true"                  { return yy::parser::make_TRUE(yytext); }
"false"                 { return yy::parser::make_FALSE(yytext); }
"this"                  { return yy::parser::make_THIS(yytext); }
"new"                   { return yy::parser::make_NEW(yytext); }
"length"                { return yy::parser::make_LENGTH(yytext); }
"System.out.println"    { return yy::parser::make_PRINTLN(yytext); }




[a-zA-Z_][a-zA-Z_0-9]*  {return yy::parser::make_ID(yytext);}
(==|!=|<=|>=|<|>)       {return yy::parser::make_RELOP(yytext);}
"="                     {return yy::parser::make_ASSIGNOP(yytext);}
";"                     {return yy::parser::make_SEMICOLON(yytext);}
","                     {return yy::parser::make_COMMA(yytext);}
"{"                     {return yy::parser::make_LC(yytext);}
"}"                     {return yy::parser::make_RC(yytext);}
"["                     {return yy::parser::make_LS(yytext);}
"]"                     {return yy::parser::make_RS(yytext);}
[&]                     {return yy::parser::make_ANDOP(yytext);}
[|]                     {return yy::parser::make_OROP(yytext);}
"!"                     {return yy::parser::make_NOTOP(yytext);}
[?]                     {return yy::parser::make_QUESTION(yytext);}
[:]                     {return yy::parser::make_COLON(yytext);}
[.]                     {return yy::parser::make_DOT(yytext);}
[0-9]+                  {return yy::parser::make_INT(yytext);}
[0-9]+\.[0-9]+           {return yy::parser::make_FLOAT(yytext);}
"if"                    {return yy::parser::make_IF(yytext);}
"else"                  {return yy::parser::make_ELSE(yytext);}
"while"                 {return yy::parser::make_WHILE(yytext);}
"for"                   {return yy::parser::make_FOR(yytext);}
"break"                 {return yy::parser::make_BREAK(yytext);}
"continue"              {return yy::parser::make_CONTINUE(yytext);}
"return"                {return yy::parser::make_RETURN(yytext);}
"int"                   {return yy::parser::make_INTTYPE(yytext);}
"float"                 {return yy::parser::make_FLOATTYPE(yytext);}
"void"                  {return yy::parser::make_VOIDTYPE(yytext);}


"+"                     {return yy::parser::make_PLUSOP(yytext);}
"-"                     {return yy::parser::make_MINUSOP(yytext);}
"*"                     {return yy::parser::make_MULTOP(yytext);}
"("                     {return yy::parser::make_LP(yytext);}
")"                     {return yy::parser::make_RP(yytext);}